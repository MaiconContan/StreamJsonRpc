trigger:
  branches:
    include:
    - master
    - microbuild
    - 'validate/*'
  paths:
    exclude:
    - doc/
    - '*.md'
    - .vscode/

parameters:
- name: SignTypeSelection
  displayName: Sign type
  type: string
  default: Test
  values: [ 'Test', 'Real' ]

stages:

- stage: Build
  variables:
    TreatWarningsAsErrors: true
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    BuildConfiguration: Release
    BuildPlatform: Any CPU
    push_to_ci: true
    NUGET_PACKAGES: $(Agent.TempDirectory)/.nuget/packages
    SignTypeSelection: ${{ parameters.SignTypeSelection }}

  jobs:
  - template: build.yml
    parameters:
      windowsPool: VSEng-MicroBuildVS2019

- stage: symbol_archive
  displayName: Symbol archival
  condition: and(succeeded(), eq(dependencies.Build.outputs['Windows.SetPipelineVariables.SignType'], 'Real'))
  jobs:
  - job: archive
    pool: VSEng-RMPool
    steps:
    - download: current
      artifact: Variables-Windows
      displayName: Download Variables-Windows artifact
    - task: PowerShell@2
      displayName: Set VSTS variables based on artifacts
      inputs:
        targetType: filePath
        filePath: $(Pipeline.Workspace)/Variables-Windows/_pipelines.ps1
    - download: current
      artifact: symbols-Windows
      displayName: Download symbols-Windows artifact
    - task: MicroBuildArchiveSymbols@1
      displayName: Archive $(SymbolsFeatureName) on Symweb
      inputs:
        SymbolsFeatureName: $(SymbolsFeatureName)
        SymbolsSymwebProject: VS
        SymbolsUncPath: \\cpvsbuild\drops\$(TeamName)\$(Build.DefinitionName)\$(Build.SourceBranchName)\$(Build.BuildNumber)\Symbols.Archival
        SymbolsEmailContacts: vsidemicrobuild
        SymbolsAgentPath: $(Pipeline.Workspace)/symbols-Windows
    - task: MicroBuildCleanup@1
      displayName: Send Telemetry
