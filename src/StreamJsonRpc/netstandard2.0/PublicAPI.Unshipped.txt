override StreamJsonRpc.TargetMethod.ToString() -> string!
static StreamJsonRpc.CorrelationManagerTracingStrategy.TraceState.get -> string?
static StreamJsonRpc.CorrelationManagerTracingStrategy.TraceState.set -> void
StreamJsonRpc.ActivityTracingStrategy
StreamJsonRpc.ActivityTracingStrategy.ActivityTracingStrategy() -> void
StreamJsonRpc.ActivityTracingStrategy.ApplyInboundActivity(StreamJsonRpc.Protocol.JsonRpcRequest! request) -> System.IDisposable?
StreamJsonRpc.ActivityTracingStrategy.ApplyOutboundActivity(StreamJsonRpc.Protocol.JsonRpcRequest! request) -> void
StreamJsonRpc.CorrelationManagerTracingStrategy
StreamJsonRpc.CorrelationManagerTracingStrategy.ApplyInboundActivity(StreamJsonRpc.Protocol.JsonRpcRequest! request) -> System.IDisposable?
StreamJsonRpc.CorrelationManagerTracingStrategy.ApplyOutboundActivity(StreamJsonRpc.Protocol.JsonRpcRequest! request) -> void
StreamJsonRpc.CorrelationManagerTracingStrategy.CorrelationManagerTracingStrategy() -> void
StreamJsonRpc.CorrelationManagerTracingStrategy.TraceSource.get -> System.Diagnostics.TraceSource?
StreamJsonRpc.CorrelationManagerTracingStrategy.TraceSource.set -> void
StreamJsonRpc.ExceptionProcessing
StreamJsonRpc.ExceptionProcessing.CommonErrorData = 0 -> StreamJsonRpc.ExceptionProcessing
StreamJsonRpc.ExceptionProcessing.ISerializable = 1 -> StreamJsonRpc.ExceptionProcessing
StreamJsonRpc.IActivityTracingStrategy
StreamJsonRpc.IActivityTracingStrategy.ApplyInboundActivity(StreamJsonRpc.Protocol.JsonRpcRequest! request) -> System.IDisposable?
StreamJsonRpc.IActivityTracingStrategy.ApplyOutboundActivity(StreamJsonRpc.Protocol.JsonRpcRequest! request) -> void
StreamJsonRpc.JsonRpc.ActivityTracingStrategy.get -> StreamJsonRpc.IActivityTracingStrategy?
StreamJsonRpc.JsonRpc.ActivityTracingStrategy.set -> void
StreamJsonRpc.JsonRpc.ExceptionStrategy.get -> StreamJsonRpc.ExceptionProcessing
StreamJsonRpc.JsonRpc.ExceptionStrategy.set -> void
StreamJsonRpc.JsonRpc.TraceEvents.ExceptionNotDeserializable = 21 -> StreamJsonRpc.JsonRpc.TraceEvents
StreamJsonRpc.JsonRpc.TraceEvents.ExceptionNotSerializable = 20 -> StreamJsonRpc.JsonRpc.TraceEvents
StreamJsonRpc.Protocol.JsonRpcErrorCode.InvocationErrorWithException = -32004 -> StreamJsonRpc.Protocol.JsonRpcErrorCode
StreamJsonRpc.Protocol.JsonRpcMessage.OutboundExtraTopLevelProperties.get -> System.Collections.Generic.IReadOnlyDictionary<string!, StreamJsonRpc.Protocol.JsonRpcMessage.TypedValue>!
StreamJsonRpc.Protocol.JsonRpcMessage.SetTopLevelProperty<T>(string! name, T? value) -> void
StreamJsonRpc.Protocol.JsonRpcMessage.TypedValue
StreamJsonRpc.Protocol.JsonRpcMessage.TypedValue.TypedValue() -> void
StreamJsonRpc.Protocol.JsonRpcMessage.TypedValue.TypedValue(object? value, System.Type! valueType) -> void
StreamJsonRpc.Protocol.JsonRpcMessage.TypedValue.Value.get -> object?
StreamJsonRpc.Protocol.JsonRpcMessage.TypedValue.ValueType.get -> System.Type?
StreamJsonRpc.Protocol.JsonRpcRequest.TraceParent.get -> string?
StreamJsonRpc.Protocol.JsonRpcRequest.TraceParent.set -> void
StreamJsonRpc.Protocol.JsonRpcRequest.TraceState.get -> string?
StreamJsonRpc.Protocol.JsonRpcRequest.TraceState.set -> void
StreamJsonRpc.RemoteInvocationException.RemoteInvocationException(string? message, int errorCode, System.Exception! innerException) -> void
StreamJsonRpc.RequestId.RequestId() -> void
StreamJsonRpc.TargetMethod
virtual StreamJsonRpc.CorrelationManagerTracingStrategy.GetInboundActivityName(StreamJsonRpc.Protocol.JsonRpcRequest! request) -> string?
virtual StreamJsonRpc.JsonRpc.DispatchRequestAsync(StreamJsonRpc.Protocol.JsonRpcRequest! request, StreamJsonRpc.TargetMethod! targetMethod, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.ValueTask<StreamJsonRpc.Protocol.JsonRpcMessage!>
virtual StreamJsonRpc.JsonRpc.LoadType(string! typeFullName, string? assemblyName) -> System.Type?
virtual StreamJsonRpc.Protocol.JsonRpcMessage.TryGetTopLevelProperty<T>(string! name, out T? value) -> bool
virtual StreamJsonRpc.Protocol.JsonRpcRequest.ArgumentNames.get -> System.Collections.Generic.IEnumerable<string!>?
